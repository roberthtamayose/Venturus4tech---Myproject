{"version":3,"sources":["assets/logo-vagas.png","assets/developer.png","assets/tester.png","assets/designer.png","assets/background.jpg","components/navigation/Header/Header.js","components/JobManagement/JobCard/JobCard.js","components/JobForm/JobForm.js","components/navigation/Collapse/Collapse.js","components/JobManagement/JobManagement.js","components/About/About.js","components/navigation/NotFound/NotFound.js","components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","header","props","react_default","a","createElement","className","Link","to","src","logo","style","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","userName","onClick","logout","jobCard","img","area","developerImg","testerImg","designerImg","backDefault","buttons","navigator","onLine","editHandler","panelId","removeHandler","alt","name","description","salary","JobForm","objModel","Object","freeze","skills","differentials","isPcd","state","newJob","objectSpread","_this","idEditing","postJobHandler","event","objId","axios","put","then","response","editedHandler","setState","catch","error","alert","console","post","data","addItemList","preventDefault","onValueChangeHandler","attrName","pValue","currentJob","clearFormHandler","isEditing","clearSelectedId","_this2","this","log","editJobId","get","nextProps","nextState","_this3","hasChanged","keys","forEach","key","_this4","onSubmit","for","value","required","onChange","target","rows","checked","e","Component","collapse","btnClass","href","collapseId","role","buttonText","children","JobsManagement","jobs","hasError","selectedId","jobCreateHandler","paramNewJob","newList","push","jobEditHandler","paramId","jobEditedHandler","newJobData","index","findIndex","job","jobsList","jobRemoveHandler","paramName","window","confirm","concat","delete","getAxiosConfig","_","splice","localStorage","setItem","JSON","stringify","parse","getItem","renderJobs","map","JobCard","Collapse","JobForm_JobForm","React","about","notFound","Login","email","password","maxWidth","margin","require","htmlFor","login","App","loggedUser","loginHandler","paramEmail","paramPass","user","token","logoutHandler","clear","Header","Switch","Route","path","component","JobManagement","Sobre","NotFound","Login_Login","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","defaults","baseURL","headers","Authorization","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.830b0551.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-vagas.9af27c13.png\";","module.exports = __webpack_public_path__ + \"static/media/developer.92ee1408.png\";","module.exports = __webpack_public_path__ + \"static/media/tester.3611cdb3.png\";","module.exports = __webpack_public_path__ + \"static/media/designer.33abf3e9.png\";","module.exports = __webpack_public_path__ + \"static/media/background.71ce45f3.jpg\";","import React from 'react';\r\nimport logo from '../../../assets/logo-vagas.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst header = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light  bg-dark\">\r\n      <div>\r\n        <Link className=\"navbar-brand\" to='/dashboard'>\r\n          <img src={logo} style={{ width: '100px' }} />\r\n        </Link>\r\n      </div>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <Link className=\"nav-item nav-link active text-white\" to='/vagas'>\r\n            Vagas\r\n          </Link>\r\n          <Link className=\"nav-item nav-link text-white\" to='/sobre'>\r\n            Sobre\r\n          </Link>\r\n          <a className=\"nav-item nav-link text-white\">{props.userName}</a>\r\n          <a className=\"nav-item nav-link text-white\" onClick={() => props.logout()}>\r\n            <i className=\"fas fa-sign-out-alt\"></i> Logout\r\n          </a>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport developerImg from '../../../assets/developer.png'\r\nimport testerImg from '../../../assets/tester.png'\r\nimport designerImg from '../../../assets/designer.png'\r\nimport backDefault from '../../../assets/background.jpg'\r\n\r\nconst jobCard = (props) => {\r\n\r\n  let img = null;\r\n\r\n  switch (props.area) {\r\n    case 'dev':\r\n      img = developerImg;\r\n      break;\r\n    case 'test':\r\n      img = testerImg;\r\n      break;\r\n    case 'design':\r\n      img = designerImg;\r\n      break;\r\n    default:\r\n      img = backDefault;\r\n      break;\r\n  }\r\n\r\n  let buttons = <div></div>\r\n\r\n  if (navigator.onLine) {\r\n    buttons = (\r\n      <div>\r\n        <button onClick={props.editHandler} data-toggle=\"collapse\" data-target={'#' + props.panelId} className=\"btn btn-warning mr-1\">\r\n          <i className=\"far fa-edit\"></i>\r\n        </button>\r\n        <button onClick={props.removeHandler} className=\"btn btn-danger\">\r\n          <i className=\"far fa-trash-alt\"></i>\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-sm-12 col-md-6 col-lg-4 mb-3\">\r\n      <div className=\"card\">\r\n        <img className=\"card-img-top\" src={img} alt=\"Card cap\" />\r\n        <div className=\"card-body\">\r\n          <Link to={\"/vagas/\" + props.id}><h5 className=\"card-title\">{props.name}</h5></Link>\r\n          <div>\r\n            <b>Descrição:</b>\r\n            <p>{props.description}</p>\r\n\r\n            <b>Salário base:</b>\r\n            <p>R$  {props.salary}</p>\r\n\r\n          </div>\r\n          {buttons}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default jobCard;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class JobForm extends Component {\r\n\r\n  objModel = Object.freeze({\r\n    name: '',\r\n    description: '',\r\n    skills: '',\r\n    differentials: '',\r\n    salary: '',\r\n    area: '',\r\n    isPcd: false\r\n  });\r\n\r\n  state = {\r\n    newJob: { ...this.objModel },\r\n    idEditing: false\r\n  }\r\n\r\n  postJobHandler = (event) => {\r\n\r\n    let objId = '';\r\n\r\n    if (this.state.newJob.id) { // se tem id é uma edição\r\n      axios.put('/jobs/' + this.state.newJob.id, this.state.newJob)\r\n        .then(response => {\r\n          this.props.editedHandler(this.state.newJob.id, this.state.newJob);\r\n          this.setState({ newJob: { ...this.objModel } }); //limpar form\r\n        })\r\n        .catch(error => {\r\n          alert('Deu erro no servidor!');\r\n          console.error(error);\r\n        });\r\n    } else {\r\n\r\n      axios.post('/jobs', this.state.newJob)\r\n        .then(response => {\r\n          objId = response.data;\r\n          this.props.addItemList({ id: objId, ...this.state.newJob });\r\n          this.setState({ newJob: { ...this.objModel } }); //limpar form\r\n        })\r\n        .catch(error => {\r\n          alert('Deu erro no servidor!');\r\n          console.error(error);\r\n        });\r\n    }\r\n\r\n    event.preventDefault();\r\n\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n\r\n    console.log('did update - id: ' + this.props.editJobId);\r\n    if (this.props.editJobId && !this.state.isEditing) {\r\n      axios.get('/jobs/' + this.props.editJobId)\r\n        .then(response => {\r\n          this.setState({ newJob: response.data, isEditing: true });\r\n        })\r\n        .catch(error => {\r\n          alert('Deu erro no servidor!');\r\n          console.error(error);\r\n        });\r\n      }\r\n\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    let hasChanged = false;\r\n    if (this.props.editJobId !== nextProps.editJobId) {\r\n      hasChanged = true;\r\n    }\r\n    Object.keys(nextState.newJob).forEach(key => {\r\n      if (this.state.newJob[key] !== nextState.newJob[key]) {\r\n        hasChanged = true;\r\n      }\r\n    });\r\n\r\n    return hasChanged;\r\n  }\r\n\r\n  onValueChangeHandler = (attrName, pValue) => {\r\n    let currentJob = { ...this.state.newJob };\r\n    currentJob[attrName] = pValue;\r\n    this.setState({ newJob: currentJob });\r\n  }\r\n\r\n  clearFormHandler = () => {\r\n    this.setState({ newJob: { ...this.objModel }, isEditing: false }); //limpar form\r\n    this.props.clearSelectedId();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"row mb-0\" onSubmit={this.postJobHandler}>\r\n        <div className=\"form-group col-12\">\r\n          <label for=\"nome\">Nome *</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"nome\"\r\n            value={this.state.newJob.name} required\r\n            onChange={(event) => this.onValueChangeHandler('name', event.target.value)} />\r\n        </div>\r\n        <div className=\"form-group col-12\">\r\n          <label for=\"descricao\">Descrição *</label>\r\n          <textarea className=\"form-control\" id=\"descricao\" rows=\"3\" required\r\n            value={this.state.newJob.description} name=\"description\"\r\n            onChange={(event) => this.onValueChangeHandler(event.target.name, event.target.value)}></textarea>\r\n        </div>\r\n        <div className=\"form-group col-sm-12 col-md-6\">\r\n          <label for=\"habilidades\">Habilidades necessárias</label>\r\n          <textarea className=\"form-control\" id=\"habilidades\" rows=\"3\"\r\n            value={this.state.newJob.skills}\r\n            onChange={(event) => this.onValueChangeHandler('skills', event.target.value)}></textarea>\r\n        </div>\r\n        <div className=\"form-group col-sm-12 col-md-6\">\r\n          <label for=\"diferenciais\">Diferenciais</label>\r\n          <textarea className=\"form-control\" id=\"diferenciais\" rows=\"3\"\r\n            value={this.state.newJob.differentials}\r\n            onChange={(event) => this.onValueChangeHandler('differentials', event.target.value)}></textarea>\r\n        </div>\r\n        <div className=\"form-group col-sm-12 col-md-6\">\r\n          <label for=\"salario\">Salário Base *</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"salario\"\r\n            value={this.state.newJob.salary} required\r\n            onChange={(event) => this.onValueChangeHandler('salary', event.target.value)} />\r\n        </div>\r\n        <div className=\"form-group col-sm-12 col-md-6\">\r\n          <label for=\"area\">Área *</label>\r\n          <select className=\"form-control\" id=\"area\"\r\n            value={this.state.newJob.area} required\r\n            onChange={(event) => this.onValueChangeHandler('area', event.target.value)}>\r\n            <option value=''>Selecione...</option>\r\n            <option value='dev'>Desenvolvimento</option>\r\n            <option value='design'>UX/UI</option>\r\n            <option value='test'>Teste</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group form-check col-sm-12 col-md-6 ml-3\">\r\n          <input type=\"checkbox\" className=\"form-check-input\" id=\"isPcd\"\r\n            checked={this.state.newJob.isPcd}\r\n            onChange={(e) => this.onValueChangeHandler('isPcd', e.target.checked)} />\r\n          <label className=\"form-check-label\" for=\"isPcd\">Vaga para PCD</label>\r\n        </div>\r\n\r\n        <div className=\"form-group col-12 text-right mb-0\">\r\n          <button onClick={this.clearFormHandler} className=\"btn btn-light mr-1\" data-toggle=\"collapse\" data-target={'#' + this.props.panelId}>Cancelar</button>\r\n          <button type=\"submit\" className=\"btn btn-success\" data-toggle=\"collapse\" data-target={'#' + this.props.panelId}>Salvar vaga</button>\r\n        </div>\r\n\r\n      </form>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nconst collapse = (props) => (\r\n  <div>\r\n    <p>\r\n      <a className={ 'btn ' + props.btnClass } data-toggle=\"collapse\" \r\n        href={ '#' + props.collapseId } role=\"button\">\r\n        { props.buttonText }\r\n      </a>\r\n      <div className=\"collapse mb-3\" id={props.collapseId}>\r\n        <div className=\"card card-body mb-3\">\r\n          { props.children }\r\n        </div>\r\n      </div>\r\n    </p>\r\n  </div>\r\n)\r\n\r\nexport default collapse;","import React from 'react';\r\n\r\nimport JobCard from './JobCard/JobCard';\r\nimport JobForm from '../JobForm/JobForm';\r\nimport Collapse from '../navigation/Collapse/Collapse';\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class JobsManagement extends React.Component {\r\n\r\n  state = {\r\n    jobs: [],\r\n    hasError: false,\r\n    selectedId: ''\r\n  }\r\n\r\n  jobCreateHandler = (paramNewJob) => {\r\n    let newList = this.state.jobs;\r\n    newList.push(paramNewJob);\r\n    this.setState({ jobs: newList });\r\n  }\r\n\r\n  jobEditHandler = (paramId) => {\r\n    console.log(paramId);\r\n    this.setState({ selectedId: paramId });\r\n  }\r\n\r\n  jobEditedHandler = (paramId, newJobData) => {\r\n    const index = this.state.jobs.findIndex(job => job.id == paramId);\r\n    let jobsList = this.state.jobs;\r\n    jobsList[index] = newJobData;\r\n    this.setState({ jobs: jobsList });\r\n  }\r\n\r\n\r\n\r\n  jobRemoveHandler = (paramId, paramName) => {\r\n    if (window.confirm(`Deseja realmente remover a vaga \"${paramName}\"?`)) {\r\n\r\n      axios.delete(`/jobs/${paramId}`, window.getAxiosConfig())\r\n        .then(_ => {\r\n          const index = this.state.jobs.findIndex(job => job.id === paramId);\r\n\r\n          let newList = this.state.jobs;\r\n          newList.splice(index, 1);\r\n          this.setState({ jobs: newList });\r\n\r\n          window.alert('Removido com sucesso!');\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"WILL UNMOUNT\");\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (!navigator.onLine) {\r\n      this.setState({ jobs: JSON.parse(localStorage.getItem('jobs')) });\r\n      \r\n    } else {\r\n\r\n      axios.get('/jobs', window.getAxiosConfig())\r\n        .then(response => {\r\n          this.setState({ jobs: response.data })\r\n          localStorage.setItem('jobs', JSON.stringify(response.data));\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        })\r\n    }\r\n  }\r\n\r\n  clearSelectedId = () => {\r\n    this.setState({ selectedId: '' });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const renderJobs = this.state.jobs.map(job => {\r\n      return <JobCard\r\n        key={job.id}\r\n        id={job.id}\r\n        name={job.name}\r\n        description={job.description}\r\n        salary={job.salary}\r\n        area={job.area}\r\n        panelId=\"newJobForm\"\r\n        removeHandler={() => this.jobRemoveHandler(job.id, job.name)}\r\n        editHandler={() => this.jobEditHandler(job.id)}\r\n      />\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Collapse buttonText=\"CRIAR VAGA\" btnClass='btn-secondary'\r\n          collapseId=\"newJobForm\">\r\n          <JobForm addItemList={this.jobCreateHandler}\r\n            editJobId={this.state.selectedId} panelId=\"newJobForm\"\r\n            clearSelectedId={this.clearSelectedId}\r\n            editedHandler={this.jobEditedHandler} />\r\n        </Collapse>\r\n\r\n        <div className=\"row\">\r\n          {renderJobs}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nconst about = () => (\r\n  <p>Página de sobre!</p>\r\n)\r\nexport default about;","import React from 'react';\r\n\r\nconst notFound = () => (\r\n  <div className='text-center mt-5'>\r\n    <h3>Página não encontrada</h3>\r\n    <h1> 😱 </h1>\r\n  </div>\r\n)\r\n\r\nexport default notFound;","import React from 'react';\r\n\r\nexport default class Login extends React.Component {\r\n\r\n  state = { email: '', password: '' }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n\r\n        <div className=\"card\" style={{ maxWidth: '35rem', margin: '0 auto' }}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n            <img style={{ width: '100%' }}\r\n              src={require('./../../assets/logo-vagas.png')} />\r\n            </h5>\r\n            <h6 className=\"card-subtitle mb-2 text-muted\">Insira seu email e senha para entrar no sistema</h6>\r\n\r\n            <div className=\"form-group col-12\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                onChange={(e) => { this.setState({ email: e.target.value }) }}\r\n                type=\"email\"\r\n                className=\"form-control\" id=\"email\" />\r\n            </div>\r\n            <div className=\"form-group col-sm-12\">\r\n              <label htmlFor=\"password\">Senha</label>\r\n              <input\r\n                onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n                type=\"password\"\r\n                className=\"form-control\" id=\"password\" />\r\n            </div>\r\n\r\n            <div className=\"form-group col-12 text-right mb-0\">\r\n              <button type=\"submit\" className=\"btn btn-success\"\r\n                onClick={() => { this.props.login(this.state.email, this.state.password) }}>\r\n                Entrar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport Cabecalho from './components/navigation/Header/Header';\nimport JobManagement from './components/JobManagement/JobManagement';\nimport Sobre from './components/About/About';\nimport NotFound from './components/navigation/NotFound/NotFound';\nimport Login from './components/Login/Login';\n\nimport { Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n    loggedUser: JSON.parse(window.localStorage.getItem('user')) || null\n  }\n\n  loginHandler = (paramEmail, paramPass) => {\n    axios.post('/login', { 'email': paramEmail, 'password': paramPass })\n      .then(response => {\n        window.localStorage.setItem('user', JSON.stringify( response.data.user ));\n        window.localStorage.setItem('token', JSON.stringify( response.data.token ));\n\n        this.setState({ loggedUser: response.data.user });\n      })\n      .catch(error => {\n        alert('Login inválido');\n        console.error(error);\n      })\n  }\n\n  logoutHandler = () => {\n    window.localStorage.clear();\n    this.setState({ loggedUser: null });\n  }\n\n  render() {\n    if (this.state.loggedUser) {\n      return (\n        <div className=\"App\">\n          <Cabecalho userName={ this.state.loggedUser.name }\n            logout={ this.logoutHandler }/>\n          <div className=\"container pt-3\">\n            <Switch>\n              <Route path='/' component={ JobManagement }/>\n              <Route path='/dashboard' component={ JobManagement }/>\n              <Route path='/vagas' component={ JobManagement }/>\n              <Route path='/sobre' component={ Sobre }/>\n              <Route path='*' component={ NotFound }/>\n            </Switch>\n          </div>\n        </div>\n      );\n    }\n\n    return (<Login login={ this.loginHandler }></Login>);\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport axios from 'axios';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport '../node_modules/jquery/dist/jquery.min.js';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js';\n\naxios.defaults.baseURL = 'https://afternoon-ocean-29603.herokuapp.com';\n\nwindow.getAxiosConfig = () => {\n  return{\n    headers:{\n      'Authorization': 'Bearer ' + JSON.parse(window.localStorage.getItem('token'))\n    }\n  }\n}\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}